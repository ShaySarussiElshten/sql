# SQL Server Database Comparison Configuration
# Copy this file to .env.docker and set your actual password

# SQL Server SA password (must meet complexity requirements)
SA_PASSWORD=StrongPassword123!

# Database connection strings (will use SA_PASSWORD from above)
DB1_CONNECTION_STRING=mssql://sa:StrongPassword123!@localhost:1433/testdb1
DB2_CONNECTION_STRING=mssql://sa:StrongPassword123!@localhost:1434/testdb2

# Complex JOIN queries for comparison
DB1_QUERY=SELECT TOP 500 t.id as transaction_id, c.name as customer_name, p.name as product_name, cat.name as category_name, t.amount as total_amount, t.quantity, t.status as order_status, c.city as customer_location, c.country as customer_region, t.created_at as order_date, (t.amount / t.quantity) as unit_price, CASE WHEN t.amount > 500 THEN 'high_value' WHEN t.amount > 100 THEN 'medium_value' ELSE 'low_value' END as value_tier FROM transactions t INNER JOIN customers c ON t.customer_id = c.id INNER JOIN products p ON t.product_id = p.id INNER JOIN categories cat ON p.category_id = cat.id WHERE t.created_at >= '2024-01-01' ORDER BY t.id

DB2_QUERY=SELECT TOP 500 o.order_id as transaction_id, u.full_name as customer_name, i.item_name as product_name, pt.type_name as category_name, o.total_amount, o.item_count as quantity, o.order_status, u.location as customer_location, u.region as customer_region, o.order_date, (o.total_amount / o.item_count) as unit_price, CASE WHEN o.total_amount > 500 THEN 'high_value' WHEN o.total_amount > 100 THEN 'medium_value' ELSE 'low_value' END as value_tier FROM orders o INNER JOIN users u ON o.user_id = u.user_id INNER JOIN items i ON o.item_id = i.item_id INNER JOIN product_types pt ON i.type_id = pt.type_id WHERE o.order_date >= '2024-01-01' ORDER BY o.order_id

# Acceptable delta for numeric comparisons
ACCEPTABLE_DELTA=0.01
